#admin-transfer-item-form{data: {'product-query-url': query_admin_products_path, source: transfer.source.present? && transfer.source.id}}
  = bootstrap_form_for [:admin, transfer, TransferItem.new(amount: 1)], remote: true do |f|
    %fieldset
      .row
        .col-xs-12.col-sm-12.col-md-5
          = f.select :product_id, [], {skip_label: true}, {placeholder: t('.product_query'), class: 'selectize-tall selectize-list-group'}
        .col-xs-6.col-sm-6.col-md-3
          = f.text_field :lot_code, skip_label: true, disabled: transfer.source.present?, placeholder: col(TransferItem, :lot_code)
        .col-xs-6.col-sm-3.col-md-2
          = f.text_field :expires_at, skip_label: true, readonly: transfer.source.present?, placeholder: col(TransferItem, :expires_at)
        .col-xs-12.col-sm-3.col-md-2
          .form-group
            .input-group
              = f.number_field_without_bootstrap :amount, min: 1, max: 999, placeholder: col(TransferItem, :amount), class: 'form-control text-right'
              .input-group-btn
                = f.button class: 'btn btn-success' do
                  = t('.submit')

  :coffee
    $('#transfer_item_product_id').betterSelectize
      valueField: 'id'
      sortField: [{field: 'title'}, {field: 'subtitle'}]
      searchField: ['code', 'customer_code', 'title', 'subtitle']
      diacritics: false
      render: $.fn.selectize.product_renderer
      load: (query, callback) ->
        return callback() unless query.length > 2
        $.ajax
          url: $('#admin-transfer-item-form').data 'productQueryUrl'
          type: 'GET'
          dataType: 'json'
          data:
            q: query
            purposes: ['vanilla', 'component']
            inventories: $('#admin-transfer-item-form').data 'source'
            having_variants: false
          error: ->
            callback()
          success: (response) ->
            callback(response)
      onChange: (id) ->
        $lot_code = $('#transfer_item_lot_code')[0].selectize
        source = $('#admin-transfer-item-form').data 'source'
        if id and source?
          $lot_code.setValue null
          $lot_code.clearOptions()
          $('#transfer_item_expires_at').val ''
          $lot_code.load (callback) ->
            $.ajax
              url: $('#transfer_item_product_id')[0].selectize.options[id].url
              type: 'GET'
              dataType: 'json'
              error: ->
                callback()
              success: (response) ->
                $lot_code.enable()
                callback(response.inventory[source])

    $('#transfer_item_lot_code').betterSelectize
      valueField: 'code'
      searchField: 'code'
      create: !$('#admin-transfer-item-form').data('source')
      maxItems: 1
      render: $.fn.selectize.inventory_renderer
      onChange: (code) ->
        expires = if code then this.options[code].expires_at else undefined
        $('#transfer_item_expires_at').val expires
