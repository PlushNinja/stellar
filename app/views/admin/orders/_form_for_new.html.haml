= bootstrap_form_for [:admin, order] do |f|
  .col-lg-5
    .panel.panel-primary
      .panel-heading
        %h4.panel-title= t('.order_meta')
      .panel-body
        %fieldset.for-billing-refresh.for-shipping-refresh.for-order-type-refresh
          = f.select :billing_group_id, @groups.map { |g| [g.to_path, g.id, data: {appearance: g.appearance}.to_json] }
        %fieldset.for-shipping-refresh.for-order-type-refresh
          = f.select :shipping_group_id, @groups.map { |g| [g.to_path, g.id, data: {appearance: g.appearance}.to_json] }, help: t('.order_meta_help')
        %hr
        %fieldset.for-shipping-refresh.for-order-type-refresh
          = f.select :order_type_id, @order.billing_group.outgoing_order_types.map { |o| [o.to_s, o.id] }
        %fieldset.for-billing-refresh.for-shipping-refresh.for-order-type-refresh
          = f.select :inventory_id, @order.billing_group.available_inventories.map { |i| [i.to_s, i.id] }
          = f.hidden_field :payload_gid
          - if @order.payload.present?
            %hr
            .form-group
              %label.control-label= t('.has_payload')
              %p.form-control-static= bootstrap_label(@order.payload, appearance: 'primary')
  .col-lg-6.col-lg-offset-1
    .panel.panel-default
      .panel-heading
        %h4.panel-title= t('.customer')
      .panel-body
        %fieldset.for-billing-refresh.for-shipping-refresh.for-order-type-refresh
          .form-group.has-icon
            %label.control-label= col(Order, :customer_email)
            = f.email_field_without_bootstrap :customer_email, class: 'form-control', required: true, autocomplete: 'billing email'
            = icon('envelope-o')
          .form-group.has-icon
            %label.control-label= col(Order, :contact_email)
            = f.email_field_without_bootstrap :contact_email, class: 'form-control', autocomplete: 'shipping email'
            = icon('envelope-o')
        - if @order.has_billing?
          %fieldset
            = render partial: 'admin/addresses/form_fields', locals: {type: :billing, f: f}
            - if @order.has_shipping?
              = f.form_group do
                = f.check_box :separate_shipping_address
        - if @order.has_shipping?
          #shipping-address.collapse{class: @order.shipping_address_required? && 'in'}
            %fieldset
              = render partial: 'admin/addresses/form_fields', locals: {type: :shipping, f: f}
        %fieldset.actions.fixed
          .container
            = f.primary

:coffee
  refresh = (data) ->
    $.ajax
      url: '#{new_admin_order_path}'
      type: 'GET'
      dataType: 'script'
      data: data

  $billing_group_select = $('#order_billing_group_id').betterSelectize
    labelField: 'title'
    dataAttr: 'data'
    render: $.fn.selectize.label_renderer
    onChange: (id) ->
      refresh $('.for-billing-refresh').serialize()

  $shipping_group_select = $('#order_shipping_group_id').betterSelectize
    labelField: 'title'
    dataAttr: 'data'
    render: $.fn.selectize.label_renderer
    onChange: (id) ->
      refresh $('.for-shipping-refresh').serialize()

  $order_type_select = $('#order_order_type_id').betterSelectize
    onChange: (id) ->
      refresh $('.for-order-type-refresh').serialize()

  $inventory_select = $('#order_inventory_id').betterSelectize()

  $('#order_separate_shipping_address').on 'change', (e) ->
    if $(e.target).is ':checked'
      $('#shipping-address').collapse 'show'
    else
      $('#shipping-address').collapse 'hide'
