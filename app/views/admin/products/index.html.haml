.page-header
  - if current_user.can_create?(Product)
    = link_to new_admin_product_path, class: 'btn btn-primary' do
      = icon('plus', t('.new_product'))
  %h1= icon('cube', title(Product, count: 2))

%ul.nav.nav-tabs{role: 'tablist'}
  - @categories.each_with_index do |category, index|
    - next if category.products.empty?
    %li{role: 'presentation', class: index == 0 ? 'active' : nil}
      %a{href: "#tab-#{dom_id(category)}", role: 'tab', data: {toggle: 'tab'}}
        = category.name.truncate(15, omission: 'â€¦')
  %li{role: 'presentation'}
    %a{href: '#tab-uncategorized', role: 'tab', data: {toggle: 'tab'}}
      = t('.uncategorized')

.tab-content
  - @categorized.group_by(&:category).each do |category, products|
    .tab-pane.fade{id: "tab-#{dom_id(category)}", class: category == @categories.first ? 'in active' : nil}
      %h2.visible-print-block= category.name
      = render partial: 'admin/products/table', object: products, as: :products

  #tab-uncategorized.tab-pane.fade
    %h2.visible-print-block= t('.uncategorized')
    = render partial: 'admin/products/table', object: @uncategorized, as: :products

:coffee
  $('.sortable').sortable(
    items: 'tr'
    handle: '.handle'
    placeholder: '#{tr_placeholder(5)}'
  ).bind 'sortupdate', (e, ui) ->
    $.post '#{reorder_admin_products_path}',
      {reorder: $('tr', this).map(-> this.id).get()}
