= bootstrap_form_for [:admin, @customer_asset] do |f|
  .panel.panel-default
    .panel-body
      %fieldset{disabled: locked}
        = f.select :product_id, [], {}, {placeholder: t('actions.query'), class: 'selectize-tall selectize-list-group'}
        = f.select :user_id, current_store.users.map { |u| [u.to_s, u.id] }, {include_blank: true}, {class: 'selectize'}
      - unless locked
        %fieldset.actions.fixed
          .container
            = f.primary

:coffee
  $('#customer_asset_product_id').betterSelectize
    valueField: 'id'
    sortField: [{field: 'title'}, {field: 'subtitle'}]
    searchField: ['code', 'customer_code', 'title', 'subtitle']
    diacritics: false
    render: $.fn.selectize.product_renderer
    load: (query, callback) ->
      return callback() unless query.length > 2
      $.ajax
        url: '#{query_admin_products_path}'
        type: 'GET'
        dataType: 'json'
        data:
          q: query
          purposes: ['vanilla', 'composite', 'package']
        error: ->
          callback()
        success: (response) ->
          callback(response)
