%tr[transfer_item]{class: transfer_item.appearance}
  %td= product_header transfer_item
  - if transfer_item.source.present?
    %td.control
      = form_for [:admin, transfer_item], remote: true, html: {id: nil, class: 'immediate'} do |f|
        = f.select :lot_code, [], {}, id: dom_id(transfer_item, :lot_code), data: {source: transfer_item.source.id, selected: transfer_item.lot_code, url: admin_product_path(transfer_item.product, format: :json)}
  - else
    %td
      %strong= transfer_item.lot_code
      - if transfer_item.expires_at.present?
        %span.small= icon('hourglass-end', transfer_item.expires_at)
  %td.control
    = form_for [:admin, transfer_item], remote: true, html: {id: nil, class: 'pull-right immediate'} do |f|
      = f.number_field :amount, min: 1, max: 999, id: nil, class: 'form-control text-right', tabindex: 1
  %td.actions
    = link_to icon('remove'), admin_transfer_item_path(transfer_item), remote: true, method: :delete, class: 'btn btn-outline-danger btn-sm'

  :coffee
    $lot_code = $('##{dom_id(transfer_item, :lot_code)}')
    $lot_code.betterSelectize
      valueField: 'code'
      searchField: 'code'
      maxItems: 1
      preload: true
      render: $.fn.selectize.inventory_renderer
      load: (query, callback) ->
        source = $lot_code.data 'source'
        $.ajax
          url: $lot_code.data 'url'
          type: 'GET'
          dataType: 'json'
          error: ->
            callback()
          success: (response) ->
            callback(response.inventory[source])
            $lot_code[0].selectize.setValue $lot_code.data('selected'), true
