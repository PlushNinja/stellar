= bootstrap_form_for [:admin, @message] do |f|
  .panel.panel-default
    .panel-body
      %fieldset{disabled: locked}
        = f.select :context_gid, current_store.available_contexts.map { |c| ["#{c.model_name.human}: #{c}", c.to_global_id] }, {}, {data: {stages: current_store.available_contexts.map { |c| [c.to_global_id, c.message_stages.map { |s| [value: s, text: Message.human_attribute_value(:stage, s)] }] }.to_h}}
        = f.select :stage, @message.stage_options.map { |s| [Message.human_attribute_value(:stage, s), s] }, {include_blank: true}, {class: 'selectize'}
        = f.form_group do
          = f.check_box :disabled
        .message-content.collapse{class: @message.disabled? || 'in'}
          ~ f.text_area :content
      - unless locked
        %fieldset.actions.fixed
          .container
            = f.primary

:coffee
  $('#message_context_gid').betterSelectize
    onChange: (id) ->
      $stage = $('#message_stage')[0].selectize
      stages = $('#message_context_gid').data 'stages'
      if stages[id]
        $stage.setValue null
        $stage.clearOptions()
        $stage.load (callback) ->
          callback stages[id]

  $('#message_disabled').on 'change', (e) ->
    if $(e.target).is ':checked'
      $('.message-content').collapse 'hide'
    else
      $('.message-content').collapse 'show'

  CKEDITOR.ClassicEditor.create(
    $('#message_content')[0]
    toolbar: ['heading', 'bold', 'italic', 'numberedList', 'bulletedList', 'link', 'undo', 'redo']
    language: '#{I18n.locale}'
  ).then (editor) -> editor.isReadOnly = #{locked}
  .catch (error) -> console.log error
