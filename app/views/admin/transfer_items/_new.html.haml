#admin-transfer-item-form{data: {'product-query-url': query_admin_products_path, 'inventory-id': transfer.source.id}}
  = bootstrap_form_for [:admin, transfer, TransferItem.new(amount: 1)], remote: true do |f|
    %fieldset.gap
      .row
        .col-sm-8
          = f.select :product_id, [], {skip_label: true}, {placeholder: title(Product), class: 'selectize-tall selectize-list-group'}
        .col-sm-4
          = f.number_field :amount, min: 1, max: 999, skip_label: true, placeholder: col(TransferItem, :amount)
      .row
        .col-sm-8
          = f.select :inventory_item_id, [], {skip_label: true}, {disabled: true, placeholder: col(TransferItem, :inventory_item_id)}
        .col-sm-4
          = f.button class: 'btn btn-block btn-primary' do
            = icon('check')

:coffee
  $('#transfer_item_product_id').selectize
    dropdownParent: 'body'
    valueField: 'id'
    sortField: [{field: 'title'}, {field: 'subtitle'}]
    searchField: ['code', 'customer_code', 'title', 'subtitle']
    diacritics: false
    render: $.fn.selectize.product_renderer
    load: (query, callback) ->
      return callback() unless query
      $.ajax
        url: $('#admin-transfer-item-form').data 'productQueryUrl'
        type: 'GET'
        dataType: 'json'
        data:
          q: query
          purposes: ['vanilla', 'component']
          inventories: $('#admin-transfer-item-form').data 'inventoryId'
          categories: $('#categories')[0].selectize.getValue()
          having_variants: false
        error: ->
          callback()
        success: (response) ->
          callback(response)
    onChange: (id) ->
      $('#transfer_item_inventory_item_id')[0].selectize.clearOptions()
      if id
        $('#transfer_item_inventory_item_id')[0].selectize.load (callback) ->
          $.ajax
            url: $('#transfer_item_product_id')[0].selectize.options[id].url
            type: 'GET'
            dataType: 'json'
            error: ->
              callback()
            success: (response) ->
              $('#transfer_item_inventory_item_id')[0].selectize.enable()
              callback(response.inventory_items)


  $('#transfer_item_inventory_item_id').selectize
    dropdownParent: 'body'
    allowEmptyOption: true
    valueField: 'id'
    searchField: 'code'
    render:
      item: (item, escape) ->
        """
        <div class="item">
          <strong>\#{escape(item.code)}</strong>
          <i class="fa fa-cube fa-fw"></i> \#{item.available}
          <span class="small">
            \#{if item.expires_at then '<i class="fa fa-hourglass-end fa-fw"></i> ' + item.expires_at else ''}
          </span>
        </div>
        """
      option: (item, escape) ->
        """
        <div class="option">
          <strong>\#{escape(item.code)}</strong>
          <i class="fa fa-cube fa-fw"></i> \#{item.available}
          <span class="small">
            \#{if item.expires_at then '<i class="fa fa-hourglass-end fa-fw"></i> ' + item.expires_at else ''}
          </span>
        </div>
        """
